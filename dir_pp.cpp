#include <iostream>
#include <cstdlib>
//#define MAX(a, b) ((a) > (b) ? (a) : (b)) // определяет макрос max

#ifndef MAX_INCLUDED 		// расположенный ниже код компилируется, если не определен MAX_INCLUDED
#include "max.hpp"		// включает заголовочный файл
#define MAX_INCLUDED		// определяет MAX_INCLUDED
#endif
// данная конструкция обеспечивает включение заголовочного файла только один раз

#define X 10
#define Y 30
int main(){
	//int x = 10;
	//int y = 20;
	int z = MAX(X, Y);
	
	//int z = (y > x) ? y : x;
	int& ref_z = z; 				// создание ссылки (отличие от указателя)
	
	std::cout << z << ' ' << &z << '\n';		// вывод переменной и ее адреса
	std::cout << ref_z << ' ' << &ref_z << '\n'; 	// вывод значения ссылки и адреса
							//у ссылки и переменной одинаковые адреса
							
	int *p = &z; 					//инициировали указатель и записали в него адрес z
	std::cout << *p << ' ' << p << '\n';		// вывели значение по адресу путем разыменовывания указателя
	std::cout << '\n';						// и сам указатель, те адрес
							
	int n = 10;
	int *q = new int [n];				// выделили память под динамический массив
	for (int i = 0; i < n; ++i){			//заполнили сей массив и вывели на стандартный вывод
		q[i] = rand()%10;
		std::cout << q[i] << ' ';
	}
	std::cout << '\n';
	std::cout << '\n';
	
	std::cout << *q << '\n';			// первый элемент массива
	std::cout << *(q+3) << '\n';			// третий элемент массива
	
	delete [] q;
	return 0;
}